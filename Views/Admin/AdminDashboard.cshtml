
@{
    ViewData["Title"] = "AdminDashBoard";
}
@model Users;
@using Microsoft.AspNetCore.Http;

<h1>Bienvenido @Context.Session.GetString("username").ToString()</h1>

<div class="row m-4">
    <div class="col-sm-12">
        <div class="card">
            <div class="card-header">
                Taxes Registration

            </div>
            <div class="card-body">
                <!--Aqui van los botones-->
                <table id="table" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr class="">
                            <th>Nombre</th>
                            <th>Apellidos</th>
                            <th>No_Telefono</th>
                            <th>Correo</th>
                            <th>Fecha_registro</th>
                            <th></th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

<!--Modal-->
<div class="modal fade" id="ModalTaxes" tabindex="-1" role="dialog" aria-labelledby="ModalLabelTaxes" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ModalLabelTaxes">New Register</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="form_edit">
                    <input type="hidden" id="txtId" />
                    <div class="form-group">
                        <label for="txtName" class="col-form-label">Nombre:</label>
                        <input type="text" class="form-control" id="txtName">
                    </div>
                    <div class="form-group">
                        <label for="txtLastName" class="col-form-label">Apellidos:</label>
                        <input type="text" class="form-control" id="txtLastName" />
                    </div>
                    <div class="form-group">
                        <label for="txtPhone" class="col-form-label">Telefono:</label>
                        <input type="number" class="form-control" id="txtPhone" />
                    </div>
                    <div class="form-group">
                        <label for="txtEmail" class="col-form-label">Correo:</label>
                        <input type="email" class="form-control" id="txtEmail" />
                    </div>
                    <div class="form-group">
                        <label for="txtDate" class="col-form-label">Fecha Registro:</label>
                        <input type="datetime-local" class="form-control" id="txtDate" onfocus="InitForm()" onchange="ValidateDate()" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="SaveTaxes()">Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{


    <script type="text/javascript">
        var tableTaxes;
        $(document).ready(function () {
            tableTaxes=$('#table').DataTable({
                "ajax": {
                    "url": "@Url.Action("Listar","Admin")",
                    "type": "GET",
                    "datatype": "json"
                },


                "columns": [
                    { "data": "nombre" },
                    { "data": "apellidos" },
                    { "data": "noTelefono" },
                    { "data": "correo" },
                    { "data": "fechaRegistro" },
                    {
                        "data": "id", "render": function (data) {
                            return "<button class='btn btn-primary btn-sm' type='button' onclick='Edit(" + data + ")' data-toggle='modal' data-target='#ModalTaxes'><i class='bi bi-pencil-square'></i></button>" +
                                "<button class='btn btn-danger btn-sm mt-2' type='button' onclick='Delete(" + data + ")'><i class='bi bi-trash-fill'></i></button>"
                        },
                        "searchable": true,
                        "width": "15px"
                    }
                ],

                "order": [[4, 'asc']],

                dom: 'Bfrtip',
                buttons: [

                    {
                        text: '<i class="bi bi-person-add"></i>',
                        titleAttr: 'Add',
                        className: 'btn btn-info btn-sm btn-xl btn-md',
                        action: function (e, dt, node, config) {
                            Edit(0);
                        }
                    },
                    {
                        extend: 'excel',
                        text: '<i class="bi bi-file-earmark-excel-fill"></i>',
                        titleAttr: 'Excel Export',
                        className: 'btn btn-success btn-sm btn-xl btn-md'
                    },
                    {
                        extend: 'pdf',
                        text: '<i class="bi bi-file-earmark-pdf-fill"></i>',
                        titleAttr: 'PDF Export',
                        className: 'btn btn-danger btn-sm btn-xl btn-md'
                    },

                    {
                        text: '<i class="bi bi-trash"></i>',
                        titleAttr: 'Delete All',
                        className: 'btn btn-warning btn-sm btn-xl btn-md',
                        action: function () {
                            if (confirm("Deseas eliminar todo?, si lo eliminas no se podra recuperar")) {
                                self.location.href = "@Url.Action("RemoveAll", "Admin")";
                                //location.href = @Url.Action("RemoveAll", "Admin");
                            }
                        }
                    },
                    

                ]

            });
        });

        function Edit(id) {
            $('#txtId').val(id);

            //Determine if Id exist to update
           if (id != 0) {
                jQuery.ajax({
                    url: "@Url.Action("GetTaxesId", "Admin")" + "?id=" + id,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json; charset-utf-8",
                    success: function (data) {
                        //console.log(id);
                        if (data != null) {
                            $('#ModalLabelTaxes').text("Editar cita ");
                            $('#txtName').val(data.nombre);
                            $('#txtLastName').val(data.apellidos);
                            $('#txtPhone').val(data.noTelefono);
                            $('#txtEmail').val(data.correo);
                            $('#txtDate').val(data.fechaRegistro);
                            $('#ModalTaxes').modal("show");
                        } else {

                            alert('!Base de datos llena!, descargue la informacion para despues eliminarla');
                            $('#ModalTaxes').modal("hide");
                        }
                    }
                });
           } else {
               $('#ModalLabelTaxes').text("Crear cita");
                $('#txtName').val('');
                $('#txtLastName').val('');
                $('#txtPhone').val('');
                $('#txtEmail').val('');
               $('#txtDate').val('');
               $('#ModalTaxes').modal("show");
            }

        }

        function SaveTaxes() {
            jQuery.ajax({
                url: "@Url.Action("Guardar", "Admin", "")",
                data: {
                Id: $('#txtId').val(),
                Nombre: $('#txtName').val(),
                Apellidos: $('#txtLastName').val(),
                NoTelefono: $('#txtPhone').val(),
                Correo: $('#txtEmail').val(),
                FechaRegistro:$('#txtDate').val()
                },
                type: "POST",
                success: function (data) {
                    if (data.resultado) {
                    tableTaxes.ajax.reload();
                    alert("Datos guardados exitosamente");
                    } else {
                    //alert('!Base de datos llena!, descargue la informacion para despues eliminarla');
                        alert(data.answer);
                    }
                        $('#ModalTaxes').modal("hide");
                    },
                    error: function (response) {
                        alert(response);
                    }

                    });
                }

        function Delete(id) {
            if (confirm("Deseas eliminarlo? ")) {
                jQuery.ajax({
                    url: "@Url.Action("Eliminar", "Admin")" + "?id=" + id,
                    type: "GET",
                    dataType: "json",
                    contentType: "application/json; charset-utf-8",
                    success: function (data) {
                        if (data.resultado) {
                            tableTaxes.ajax.reload();
                        }   
                    }   
                })
            }
        }

                function InitForm() {
                let year = @DateTime.Now.Year.ToString();
                let month = @DateTime.Now.Month>= 10 ? @DateTime.Now.Month.ToString(): '0' +@DateTime.Now.Month.ToString();
                let day = @DateTime.Now.Day>= 10 ? @DateTime.Now.Day.ToString(): '0' +@DateTime.Now.Day.ToString();
                $('#txtDate').attr({
                "min": year + '-' + month + '-' + day + 'T09:00',
                "max": '2023-06-30T18:00:00'
                })
                }

        function ValidateDate() {
            //let hour = $('#txtDate').val().substring(11)
            let getHours = new Date($('#txtDate').val()).getHours();
            let minute = new Date($('#txtDate').val()).getMinutes();
            //alert(minute)
            //alert(getHours)

            if ((getHours === 13) || (getHours === 14 && minute===0)) {
                alert('No hay citas disponibles de 1 a 2 pm')
                $('#txtDate').val('')
                } else if (getHours >= 1 && getHours<=8) {
                alert('Las citas empiezan a partir de las 9 am')
                $('#txtDate').val('')
                }
                else if (getHours >= 18) {
                alert('Ya no se hacen citas de las 6 pm en adelante')
                $('#txtDate').val('')
                }
         }

    </script>
}


